#include <iostream>
#include <string>
#include <cstring>

using namespace std;

struct Persona {
    string nombre;
    char fecha[11];
    int tamanio_tarjeta;
    int* tarjeta;
    bool quiere_intercambiar;
};

int cant_p; //variable global que va a almacenar la cantidad de personas ingresadas

/*****
* TipoFunción NombreFunción
******
* Resumen Función:
******
* Input:
* tipoParámetro NombreParámetro : Descripción Parámetro
* .......
******
* Returns:
* TipoRetorno, Descripción retorno
*****/
int* comprarTarjeta(string nombre, int dia, int &m) {
    m = nombre.size();         // m es el largo del arreglo que se va a retornar
    int* tarjeta = new int[m]; // crea un arreglo dinamico de tamanio m
    for (int i = 0; i < m; i++) { 
        tarjeta[i] = nombre[i] % dia;
        cout<< nombre[i] % dia <<" ";

    }
    cout<<"\n";
    return tarjeta;
}

/*****
* TipoFunción NombreFunción
******
* Resumen Función
******
* Input:
* tipoParámetro NombreParámetro : Descripción Parámetro
* .......
******
* Returns:
* TipoRetorno, Descripción retorno
*****/
void intercambiarTarjeta(Persona* p1, Persona* p2) { //intercambia los valores de las tarjetas
    int* tarjetaux = p1->tarjeta;
    p1->tarjeta = p2->tarjeta;
    p2->tarjeta = tarjetaux;
    cout<<"ha habido intercambio entre "<<p1->nombre<<" y "<<p2->nombre<<endl;
    
    // Intercambiar tamaños de las tarjetas
    int tamanioux = p1->tamanio_tarjeta;
    p1->tamanio_tarjeta = p2->tamanio_tarjeta;
    p2->tamanio_tarjeta = tamanioux;
    cout<<p1->nombre<<": ";
    for (int i=0; i<p1->tamanio_tarjeta ; i++){
        cout<<p1->tarjeta[i]<<" ";
    }
    cout<<"\n";
    cout<<p2->nombre<<": ";
    for (int j=0; j<p2->tamanio_tarjeta ; j++){
        cout<<p2->tarjeta[j]<<" ";
    }
    cout<<"\n";
}

/*****
* TipoFunción NombreFunción
******
* Resumen Función
******
* Input:
* tipoParámetro NombreParámetro : Descripción Parámetro
* .......
******
* Returns:
* TipoRetorno, Descripción retorno
*****/
int puntaje(Persona* p1) {
    int resultado = 0;
    for (int i = 0; i < p1->tamanio_tarjeta; i++) {
        resultado += p1->tarjeta[i] * (p1->fecha[i % 10]); // se le resta '0' para que devuelva el valor de la resta 
    }
    cout<<"el puntaje de "<<p1->nombre<<" es: "<<resultado<<endl;                                                            // de los valores ASCII 
    return resultado;
}

/*****
* TipoFunción NombreFunción
******
* Resumen Función
******
* Input:
* tipoParámetro NombreParámetro : Descripción Parámetro
* .......
******
* Returns:
* TipoRetorno, Descripción retorno
*****/
bool tieneNumeroEnComun(Persona* p1, Persona* p2) {
    for (int i = 0; i < p1->tamanio_tarjeta; i++) {
        for (int j = 0; j < p2->tamanio_tarjeta; j++) {
            if (p1->tarjeta[i] == p2->tarjeta[j]) {
                return true;
            }
        }
    }
    return false;
}

/*****
* TipoFunción NombreFunción
******
* Resumen Función
******
* Input:
* tipoParámetro NombreParámetro : Descripción Parámetro
* .......
******
* Returns:
* TipoRetorno, Descripción retorno
*****/
Persona* unDia(Persona* personas, int dia) { 
    for (int i = 0; i < cant_p; i++) {
        int n;
        personas[i].tarjeta = comprarTarjeta(personas[i].nombre, dia, n);
        personas[i].tamanio_tarjeta = n;
    }

    /*for (int j=0 ; j<cant_p ; j++){
        cout<<personas[j].nombre<<": ";
        cout<<"[";
        for (int i=0 ; i< ; i++){
            cout<< personas[j].tarjeta[i] <<", ";
        }
        cout<<"]";
        cout<<"\n";     
    }*/

    bool intercambio;
    do {
        intercambio = false;
        for (int i = 0; i < cant_p; i++) {
            if (personas[i].quiere_intercambiar == 1) {
                for (int j = 0; j < cant_p; j++) {
                    if (i != j && personas[j].quiere_intercambiar == 1 && tieneNumeroEnComun(&personas[i], &personas[j])) {
                        intercambiarTarjeta(&personas[i], &personas[j]);
                        personas[i].quiere_intercambiar = false; //encontrar una forma de devolverlo a verdadero al cambiar el dia
                        intercambio = true;
                        break;
                    }
                }
            }
        }
    } while (intercambio);

    Persona* ganador = &personas[0];
    int puntaje_max = puntaje(ganador);

    for (int i = 1; i < cant_p; i++) {
        int puntaje_actual = puntaje(&personas[i]);
        if (puntaje_actual > puntaje_max) {
            ganador = &personas[i];
            puntaje_max = puntaje_actual;
        }
    }
    return ganador;
}

/*****
* TipoFunción NombreFunción
******
* Resumen Función
******
* Input:
* tipoParámetro NombreParámetro : Descripción Parámetro
* .......
******
* Returns:
* TipoRetorno, Descripción retorno
*****/
void variosDias(Persona* personas, int cant_dias) {
    for (int dia = 1; dia <= cant_dias; dia++) {
        Persona* ganador = unDia(personas, dia);
        cout <<"El ganador es: "<<ganador->nombre <<" "<< ganador->fecha << " " << puntaje(ganador) << endl;
    }
}

int main() {
    cout<<"cantidad de personas: "<<endl;
    cin >> cant_p;

    Persona* personas = new Persona[cant_p];

    for (int i = 0; i < cant_p; i++) {
        cin >> personas[i].nombre >> personas[i].fecha >> personas[i].quiere_intercambiar;
    }

    int cant_dias;
    cant_dias=2;

    variosDias(personas, cant_dias);

    for (int i = 0; i < cant_p; i++) {
        delete[] personas[i].tarjeta;
    }
    delete[] personas;

    return 0;
}
