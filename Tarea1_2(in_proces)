#include <iostream>
#include <string>
#include <cstring>

using namespace std;

struct Persona {
    string nombre;
    char fecha[11];
    int tamanio_tarjeta;
    int* tarjeta;
    bool quiere_intercambiar;
};

int cant_p;

int* comprarTarjeta(string nombre, int dia, int &m) {
    m = nombre.size();         // m es el largo del arreglo que se va a retornar
    int* tarjeta = new int[m]; // crea un arreglo dinamico
    for (int i = 0; i < m; i++) {
        tarjeta[i] = nombre[i] % dia;
    }

    return tarjeta;
}

void intercambiarTarjeta(Persona* p1, Persona* p2) {
    int* temp_tarjeta = p1->tarjeta;
    p1->tarjeta = p2->tarjeta;
    p2->tarjeta = temp_tarjeta;
}

int puntaje(Persona* p1) {
    int resultado = 0;
    for (int i = 0; i < p1->tamanio_tarjeta; i++) {
        resultado += p1->tarjeta[i] * (p1->fecha[i % 10] - '0');
    }
    return resultado;
}

bool tieneNumeroEnComun(Persona* p1, Persona* p2) {
    for (int i = 0; i < p1->tamanio_tarjeta; i++) {
        for (int j = 0; j < p2->tamanio_tarjeta; j++) {
            if (p1->tarjeta[i] == p2->tarjeta[j]) {
                return true;
            }
        }
    }
    return false;
}

Persona* unDia(Persona* personas, int p, int dia) { 
    for (int i = 0; i < cant_p; i++) {
        int n;
        personas[i].tarjeta = comprarTarjeta(personas[i].nombre, dia, n);
        personas[i].tamanio_tarjeta = n;
    }

    bool intercambio;
    do {
        intercambio = false;
        for (int i = 0; i < cant_p; i++) {
            if (personas[i].quiere_intercambiar == 1) {
                for (int j = 0; j < cant_p; j++) {
                    if (i != j && personas[j].quiere_intercambiar == 1 && tieneNumeroEnComun(&personas[i], &personas[j])) {
                        intercambiarTarjeta(&personas[i], &personas[j]);
                        personas[i].quiere_intercambiar = false;
                        intercambio = true;
                        break;
                    }
                }
            }
        }
    } while (intercambio);

    Persona* ganador = &personas[0];
    int max_puntaje = puntaje(ganador);

    for (int i = 1; i < cant_p; i++) {
        int puntaje_actual = puntaje(&personas[i]);
        if (puntaje_actual > max_puntaje) {
            ganador = &personas[i];
            max_puntaje = puntaje_actual;
        }
    }

    return ganador;
}

void variosDias(Persona* personas, int p, int cant_dias) {
    for (int dia = 1; dia <= cant_dias; dia++) {
        Persona* ganador = unDia(personas, p, dia);
        cout << "Dia: " << dia << " - Ganador: " << ganador->nombre << " - Fecha de nacimiento: " << ganador->fecha<< " " << puntaje(ganador) << endl;
    }
}


int main() {
    cout<<"cantidad de personas: "<<endl;
    cin >> cant_p;

    Persona* personas = new Persona[cant_p];

    for (int i = 0; i < cant_p; i++) {
        cin >> personas[i].nombre >> personas[i].fecha >> personas[i].quiere_intercambiar;
    }

    int cant_dias;
    cin >> cant_dias;

    variosDias(personas, cant_p, cant_dias);

    for (int i = 0; i < cant_p; i++) {
        delete[] personas[i].tarjeta;
    }
    delete[] personas;

    return 0;
}
