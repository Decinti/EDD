#include <iostream>
#include <string>
#include <cstring>

using namespace std;

struct Persona {
    string nombre;
    char fecha[11];
    int tamanio_tarjeta;
    int* tarjeta;
    bool quiere_intercambiar;
};

int cant_p; //variable global que va a almacenar la cantidad de personas ingresadas
int a=0; //variable global para crear solo UNA VEZ un arreglo con los valores de personas.quiere_intercambiar

/*****
* int* comprarTarjeta
******
* Resumen Función: Genera y compra una tarjeta basandose en el nombre y el dia.
******
* Input:
* string nombre : El nombre de la persona.
* int dia : El dia en que se compra la tarjeta.
* int &m : Referencia al tamaño de la tarjeta generada.
******
* Returns:
* int*, Un puntero al arreglo de enteros que representa la tarjeta comprada.
*****/
int* comprarTarjeta(string nombre, int dia, int &m) {
    m = nombre.size();
    int* tarjeta = new int[m]; // crea un arreglo dinamico de tamanio m
    for (int i = 0; i < m; i++) { 
        tarjeta[i] = nombre[i] % dia;
    }
    return tarjeta;
}

/*****
* void intercambiarTarjeta
******
* Resumen Función:
* Intercambia las tarjetas y sus tamaños entre dos personas.
******
* Input:
* Persona* p1 : Un puntero a la primera persona.
* Persona* p2 : un puntero a la segunda persona.
******
* Returns:
* Esta funcion no retorna nada, solo ejecuta acciones. 
*****/
void intercambiarTarjeta(Persona* p1, Persona* p2) { 
    int* tarjetaux = p1->tarjeta;
    // Intercambia las tarjetas
    p1->tarjeta = p2->tarjeta;
    p2->tarjeta = tarjetaux;   
    // Intercambiar los tamaños de las tarjetas
    int tamanioux = p1->tamanio_tarjeta;
    p1->tamanio_tarjeta = p2->tamanio_tarjeta;
    p2->tamanio_tarjeta = tamanioux;
}

/*****
* int puntaje
******
* Resumen Función:
* Calcula el puntaje de una persona basandose en su tarjeta y fecha.
******
* Input:
* Persona* p1 : Un puntero a la persona cuyo puntaje sera calculado.
******
* Returns:
* int, El resultado del puntaje de la persona.
*****/
int puntaje(Persona* p1) {
    int resultado = 0;
    for (int i = 0; i < p1->tamanio_tarjeta; i++) {
        resultado += p1->tarjeta[i] * (p1->fecha[i % 10]);
    }
    return resultado;
}

/*****
* bool tiene NumeroEnComun
******
* Resumen Función: 
* Verifica si dos personas tienen al menos un numero en comun en sus tarjetas.
******
* Input:
* Persona* p1 : Un puntero a la primera persona.
* Persona* p2 : Un puntero a la segunda persona.
******
* Returns:
* bool, Retorna verdadero si tienen al menos un numero en comun y falso en caso contrario.
*****/
bool tieneNumeroEnComun(Persona* p1, Persona* p2) {
    // Recorre las tarjetas de las dos personas.
    for (int i = 0; i < p1->tamanio_tarjeta; i++) {
        for (int j = 0; j < p2->tamanio_tarjeta; j++) {
            if (p1->tarjeta[i] == p2->tarjeta[j]) {
                return true;
            }
        }
    }
    return false;
}

/*****
* Persona* unDia
******
* Resumen Función:
* Simula un dia de intercambio de tarjetas y determina el ganador del dia
******
* Input:
* Persona* personas: Un puntero al arreglo de personas.
* int dia : El dia actual de la simulacion.
******
* Returns:
* Persona*, Un puntero a la persona ganadora del dia. 
*****/
Persona* unDia(Persona* personas, int dia) { 
    for (int i = 0; i < cant_p; i++) {
        int n;
        personas[i].tarjeta = comprarTarjeta(personas[i].nombre, dia, n); // Le da una tarjeta (arreglo de enteros) a cada persona
        personas[i].tamanio_tarjeta = n; //asigna el tamaño del arreglo a cada persona
    }

    bool intercambio;
    do {
        intercambio = false; // Si este bool se mantiene falso es porque nadie quiere intercambiar.
        for (int i = 0; i < cant_p; i++) { // Revisa persona por persona si quiere intercambiar.
            if (personas[i].quiere_intercambiar == 1) {
                for (int j = 0; j < cant_p; j++) {
                    if (i != j && personas[j].quiere_intercambiar == 1 && tieneNumeroEnComun(&personas[i], &personas[j])) {
                        intercambiarTarjeta(&personas[i], &personas[j]);
                        personas[i].quiere_intercambiar = 0; //La persona[i], que ya cambio, ahora ya no querra cambiar hasta el siguiente dia.
                        intercambio = true;
                        break;
                    }
                }
            }
        }
    } while (intercambio);

    Persona* ganador = &personas[0];
    int puntaje_max = puntaje(ganador);

    for (int i = 1; i < cant_p; i++) { // Compara los puntajes de las personas. 
        int puntaje_actual = puntaje(&personas[i]);
        if (puntaje_actual > puntaje_max) {
            ganador = &personas[i];
            puntaje_max = puntaje_actual;
        }
    }
    return ganador;
}

/*****
* void variosDias
******
* Resumen Función:
* Simula varios dias de intercambios de tarjetas y muestra los ganadores de cada dia.
******
* Input:
* Persona* personas : Un puntero al arreglo de personas.
* int cant_dias : La cantidad de dias a simular.
******
* Returns:
* Esta funcion no retorna nada, solo ejecuta acciones. 
*****/
void variosDias(Persona* personas, int cant_dias) {
    int* los_intercambiar = new int[cant_p];
    if (a==0){ // Crea un arreglo para restablecer los valores de "quiere_intercambiar" despues de cada dia
        a=1;
        for (int i=0 ; i<cant_p ; i++){
            los_intercambiar[i]=personas[i].quiere_intercambiar;
        }
    }
    for (int dia = 1; dia <= cant_dias; dia++) {
        Persona* ganador = unDia(personas, dia);
        cout <<"El ganador es: "<<ganador->nombre <<" "<< ganador->fecha << " " << puntaje(ganador) << endl;
        for (int i=0 ; i<cant_p; i++){ // Se restablecen los valores de "quiere_intercambiar" para cada persona.
            personas[i].quiere_intercambiar=los_intercambiar[i];
        }
    }
}
/*****
* int main
******
* Resumen Función:
* Es la funcion principal que ejecuta el programa, toma las entradas, realiza las simulaciones y muestra los resultados
******
* Input:
* Esta funcion no posee inputs de entrada.
******
* Returns:
* int, Retorna 0 si el programa se ejecuta correctamente.
*****/
int main() {
    cant_p=4; // Cantidad de personas (variable global)
    int cant_dias=2; // Cantidad de dias
    Persona* personas = new Persona[cant_p];
    for (int i = 0; i < cant_p; i++) { // Se establecen los elementos del arreglo personas.
        cin >> personas[i].nombre >> personas[i].fecha >> personas[i].quiere_intercambiar;
    }
    variosDias(personas, cant_dias);
    for (int i = 0; i < cant_p; i++) {
        delete[] personas[i].tarjeta;
    }
    delete[] personas;

    return 0;
}
